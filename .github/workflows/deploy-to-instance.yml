name: Deploy Image To Instance

on:
  workflow_dispatch:
    inputs:
      instance-ip:
        description: "The IP of the instance to deploy to"
        required: true
        type: string
      image-tag:
        description: "The Tag of the ECR image to deploy"
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  id-token: write # AWS OIDC
  contents: read # Checkout

jobs:
  deploy-image:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER }}:role/github-oidc-role
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Deploy Image
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{inputs.instance-ip}}
          USER_NAME: ${{secrets.USER_NAME}}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            docker stop $(docker ps -a -q)
            docker pull ${{secrets.ECR_REPOSITORY}}:${{inputs.image-tag}}
            docker run -p 80:80 ${{secrets.ECR_REPOSITORY}}:${{inputs.image-tag}} -d
          '